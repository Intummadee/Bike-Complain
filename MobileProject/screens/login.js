import React, { useEffect, useState } from 'react';
import { StyleSheet, Text, View, Image,TextInput,Button, TouchableOpacity, SafeAreaView } from 'react-native';

// Redux
import { useSelector, useDispatch } from "react-redux"
import { putDocumentName } from "../store/actions/myAction";
import { putUSER_DATA } from "../store/actions/myAction";

// Firebase
import firebase from "../database/firebaseDB";


const login = ({navigation}) => {


    // FireBase
    const subjCollection = firebase.firestore().collection("Users");
    // data User
    const [userName , setUserName] = useState('');
    const [userPassword , setUserPassword] = useState('');
    // array User --> Collect in Redux ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß 
    // const [user, setUser] = useState([]);

    // Validation Form 
    const [showIncorrect, setIncorrect] = useState(false);
    const [showIncorrectPassword, setIncorrectPassword] = useState(false);
    const [showIncorrectEmail, setIncorrectEmail] = useState(false);

    
    // Redux
    const dispatch = useDispatch();
    
     
    const getCollection = (querySnapshot) => {
        const all_data = [];
        let userFound = false; // ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÑ‡∏´‡∏° ‡∏ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á
        querySnapshot.forEach((res) => {
             
    
            setIncorrectEmail(true)
            if(res.id == userName){ // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡πâ‡∏ß
                userFound = true;
                if(res.data().password == userPassword){
                    all_data.push(res.data())

                    //‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÉ‡∏´‡πâStore‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠ Redux
                    dispatch( putUSER_DATA(res.data()) ) // {history: Array(0), name: 'judas', email: '64070257@kmitl.ac.th', password: '1111'}
                    // dispatch( putDocumentName(res.id) ); // judas

                    setIncorrectPassword(false)
                    if(res.data().role == "Admin"){
                        console.log("ü•ûü•û role", res.data().role);
                        navigation.navigate("admin"); // 
                    }
                    else{
                        console.log("User role : ", res.data().role);
                        navigation.navigate("tab"); // 
                    }
                }
                    else{ //‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏≤‡∏™‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î‡∏ú‡∏¥‡∏î
                        setIncorrectPassword(true)
                }
            }
            // setUser(all_data);
        });
        if (userFound) { //‡∏Å‡∏£‡∏ì‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏î‡∏á
            setIncorrectEmail(false);
        } 

    };

    const findUser = () => {
        const unsubscribe = subjCollection.onSnapshot(getCollection);
        return () => {
          unsubscribe(); // ‡πÉ‡∏ô‡∏ö‡∏≤‡∏á‡∏Å‡∏£‡∏ì‡∏µ, ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡πÄ‡∏ä‡πà‡∏ô, unsubscribe ‡∏à‡∏≤‡∏Å Firebase, ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ = Unmounting (‡∏Å‡∏≤‡∏£‡∏•‡∏ö component ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å DOM)
        };
    };

    
       
     
    return (
    
    <SafeAreaView  style={styles.container}>
        <View style={styles.content}>
            <View style={styles.title}>
                <Text style={{color: '#FF724C', fontWeight:"bold", fontSize:25}}>WTH, Bro</Text>
                <Text style={{color: '#FF724C', fontWeight:"bold", fontSize:20}}>‡πÅ‡∏≠‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡πà‡∏ô‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</Text>
            </View>
            <View style={{marginTop:"15%", width:"60%", height:'auto'}}>
                <TextInput
                    style={styles.input}
                    placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
                    onChangeText={setUserName}
                    value={userName}
                    
                />
                <TextInput
                    style={styles.input}
                    placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                    onChangeText={setUserPassword}
                    value={userPassword}
                    secureTextEntry={true}
                    selectionColor={'red'}
                />
                {showIncorrect && (
                    <Text style={styles.validationText}>*‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö</Text>
                )}
                {showIncorrectPassword && (
                    <Text style={styles.validationText}>*‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</Text>
                )}
                {showIncorrectEmail && (
                    <Text style={styles.validationText}>*‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</Text>
                )}
            </View>
            <View style={{width:'60%',marginTop:"5%",position:'relative', height:'auto', }}>
                <Button
                    style={{}}
                    color="#FF724C"
                    title='‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'
                    onPress={() => { 
                        if(userName == "" || userPassword == ""){
                            console.log("‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏û‡∏≤‡∏™‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î");
                            setIncorrect(true)
                        }else{
                            setIncorrect(false)
                            findUser();
                        }
                    }}
                />
            </View>
            <View style={{color:'grey', marginTop:"5%" , height:'auto', justifyContent:'center',alignSelf:'center', flexDirection:'row', width:"100%"}}>
                <Text style={{fontSize:14, color:'grey'}}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ?</Text>
                <TouchableOpacity onPress={() => {
                    console.log("‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ");
                    navigation.navigate("signup");
                }}
                style={{width:'auto'}}
                >
                    <Text style={{color:'grey', fontWeight:'bold' ,textDecorationLine:'underline', marginLeft:"8%", width:"100%", fontSize:14 }}>‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</Text>
                </TouchableOpacity>
            </View>
        </View>
    </SafeAreaView >
  )
}
const styles = StyleSheet.create({
    container: {
      flex: 3,
      backgroundColor: '#004466',
      justifyContent:'center'
    },
    content:{
      flex: 0.6,
      justifyContent:'center',
      alignItems:'center',
    //   backgroundColor:'red'
    },
    input: {
      height: 40,
      margin: 12,
      padding: 10,
      placeholderTextColor: 'gray',
      borderBottomWidth: 1,
      backgroundColor:'white',
      borderRadius: 6,
    },
    validationText: {
        height: "auto",
        marginHorizontal: 12,
        paddingLeft: 10,
        color:'red', 
        borderBottomWidth: 0, 
        fontSize:16, 
        // backgroundColor:'white' 
    },
    title: {
        // flex:0.1,
        height:'auto',
        justifyContent: 'center',
        alignItems: 'center',
        // fontFamily: 'Cochin', //‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
        // backgroundColor:'white'
    },
  
  });


export default login;